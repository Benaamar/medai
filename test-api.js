// Script pour tester l'API de g√©n√©ration de synth√®ses m√©dicales
import axios from 'axios';

async function testAPI() {
  console.log('üß™ Test de l\'API ai-summaries/generate\n');

  // Donn√©es de test pour une consultation
  const testData = {
    consultationId: 1,  // Remplacez par un ID valide dans votre base de donn√©es
    summaryType: "consultation"  // Peut √™tre "consultation", "prescription" ou "referral"
  };

  try {
    console.log('üì§ Envoi des donn√©es de test...');
    console.log('URL: http://localhost:3000/api/ai-summaries/generate');
    console.log('Donn√©es:', JSON.stringify(testData, null, 2));
    
    const response = await axios.post(
      'http://localhost:3000/api/ai-summaries/generate', 
      testData,
      {
        headers: {
          'Content-Type': 'application/json'
        },
        timeout: 60000  // 60 secondes de timeout
      }
    );

    console.log('\n‚úÖ Succ√®s!');
    console.log('Status:', response.status);
    console.log('Success:', response.data.success);
    
    if (response.data.content) {
      console.log('Synth√®se g√©n√©r√©e:', response.data.content.length, 'caract√®res');
      console.log('\nD√©but de la synth√®se:');
      console.log('=' .repeat(50));
      console.log(response.data.content.substring(0, 300) + '...');
      console.log('=' .repeat(50));
    }

    if (response.data.metadata) {
      console.log('\nM√©tadonn√©es:');
      console.log(JSON.stringify(response.data.metadata, null, 2));
    }

  } catch (error) {
    console.log('\n‚ùå Erreur:');
    
    if (error.response) {
      console.log('Status:', error.response.status);
      console.log('Data:', JSON.stringify(error.response.data, null, 2));
      
      if (error.response.status === 400) {
        console.log('\nüîç Diagnostic erreur 400:');
        console.log('- V√©rifiez que consultationId et summaryType sont fournis');
        console.log('- V√©rifiez que consultationId correspond √† une consultation existante');
      } else if (error.response.status === 404) {
        console.log('\nüîç Diagnostic erreur 404:');
        console.log('- La consultation ou le patient n\'existe pas');
        console.log('- V√©rifiez l\'ID de consultation fourni');
      } else if (error.response.status === 500) {
        console.log('\nüîç Diagnostic erreur 500:');
        console.log('- Probl√®me avec l\'API Anthropic');
        console.log('- V√©rifiez les logs du serveur pour plus de d√©tails');
      }
    } else if (error.code === 'ECONNREFUSED') {
      console.log('‚ùå Serveur non accessible sur localhost:3000');
      console.log('Assurez-vous que votre serveur est d√©marr√© avec:');
      console.log('npm run dev');
    } else {
      console.log('Erreur:', error.message);
    }
  }
}

// Test avec donn√©es manquantes pour voir la validation
async function testValidation() {
  console.log('\nüß™ Test de validation (donn√©es manquantes)\n');

  const invalidData = {
    // consultationId manquant intentionnellement
    summaryType: "consultation"
  };

  try {
    await axios.post(
      'http://localhost:3000/api/ai-summaries/generate',
      invalidData,
      {
        headers: { 'Content-Type': 'application/json' }
      }
    );
    
    console.log('‚ùå La validation a √©chou√© - la requ√™te aurait d√ª √™tre rejet√©e');
  } catch (error) {
    if (error.response && error.response.status === 400) {
      console.log('‚úÖ Validation fonctionne correctement');
      console.log('Message:', error.response.data.message);
    } else {
      console.log('‚ùå Erreur inattendue:', error.message);
    }
  }
}

async function main() {
  console.log('üöÄ D√©marrage des tests\n');
  
  // Test principal
  await testAPI();
  
  // Test de validation
  await testValidation();
  
  console.log('\n‚úÖ Tests termin√©s');
}

main().catch(console.error); 