import { db } from './db';
import { users, patients, consultations, aiSummaries } from '@shared/schema';

async function clearDatabase() {
  try {
    console.log('üîÑ Suppression de toutes les donn√©es de la base de donn√©es...');
    
    // Supprimer d'abord les tables avec des cl√©s √©trang√®res
    console.log('üîÑ Suppression des r√©sum√©s AI...');
    await db.delete(aiSummaries);
    console.log('‚úÖ R√©sum√©s AI supprim√©s');
    
    console.log('üîÑ Suppression des consultations...');
    await db.delete(consultations);
    console.log('‚úÖ Consultations supprim√©es');
    
    console.log('üîÑ Suppression des patients...');
    await db.delete(patients);
    console.log('‚úÖ Patients supprim√©s');
    
    console.log('üîÑ Suppression des utilisateurs...');
    await db.delete(users);
    console.log('‚úÖ Utilisateurs supprim√©s');
    
    console.log('‚úÖ Base de donn√©es nettoy√©e avec succ√®s!');
    console.log('\nVous pouvez maintenant cr√©er un nouvel utilisateur administrateur avec:');
    console.log('npm run db:create-admin');
  } catch (error) {
    console.error('‚ùå Erreur lors du nettoyage de la base de donn√©es:', error);
  } finally {
    process.exit(0);
  }
}

// Demander confirmation avant de supprimer toutes les donn√©es
console.log('‚ö†Ô∏è ATTENTION: Cette op√©ration va supprimer TOUTES les donn√©es de la base de donn√©es!');
console.log('‚ö†Ô∏è Cette action est IRR√âVERSIBLE!');
console.log('');
console.log('Pour continuer, tapez "OUI" et appuyez sur Entr√©e.');

process.stdin.setEncoding('utf8');
process.stdin.on('data', (data) => {
  const input = data.toString().trim();
  if (input === 'OUI') {
    clearDatabase();
  } else {
    console.log('‚ùå Op√©ration annul√©e. La base de donn√©es n\'a pas √©t√© modifi√©e.');
    process.exit(0);
  }
}); 